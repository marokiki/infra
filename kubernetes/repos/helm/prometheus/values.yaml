server:
  ingress:
    enabled: true
    annotations:
      meta.helm.sh/release-name: prometheus
      meta.helm.sh/release-namespace: monitoring
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/ssl-redirect: 'true'
      nginx.ingress.kubernetes.io/auth-secret: prometheus-basic-auth
      nginx.ingress.kubernetes.io/auth-secret-type: auth-file
      nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required '
      nginx.ingress.kubernetes.io/proxy-body-size: 10000m
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
      kubernetes.io/tls-acme: "true"
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-issuer
    hosts:
      - prometheus.marokiki.net 
    path: /
    pathType: Prefix
    tls:
      - secretName: cloudflare-lets-encrypt-prometheus
        hosts:
          - prometheus.marokiki.net
  persistentVolume:
    existingClaim: prometheus-pvc
  extraSecretMounts:
    - name: alertmanager-secrets
      secretName: alertmanager-secrets
      mountPath: /alertmanager-secrets
      readOnly: true
  alertmanagerFiles:
    alertmanager.yml:
      global:
        slack_api_url_files: '/alertmanager-secrets/slack_api_url'
      recievers:
        - name: slack
          slack_configs:
            - channel: '#segre-sysop'
              send_resolved: true
alertmanager:
  enabled: true
prometheus-node-exporter:
  enabled: false
extraScrapeConfigs: |
  - job_name: 'node'
    static_configs:
    - targets
      - 'flare.marokiki.net:9100'
      - 'ikazuchi.marokiki.net:9100'
      - 'manaka.marokiki.net:9100'
      - 'aroma.marokiki.net:9100'
      - 'tatsumaki.marokiki.net:9100'
      - 'anna.marokiki.net:9100'
      - 'takenoko-1.marokiki.net:9100'
      - 'takenoko-2.marokiki.net:9100'
      - 'takenoko-3.marokiki.net:9100'
      - 'kinoko-1.marokiki.net:9100'
      - 'kinoko-2.marokiki.net:9100'
      - 'akatsuki-1.marokiki.net:9100'
      - 'akatsuki-2.marokiki.net:9100'
      - 'chii.marokiki.net:9100'


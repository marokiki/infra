replicaCount: 1
dbWaitDebug: true
superuser:
  name: segre
  email: segre@marokiki.net
  password: admin
  apiToken: 0123456789abcdef0123456789abcdef01234567
debug: true
logging:
  disable_existing_loggers: false
  handlers:
    console:
      class: logging.StreamHandler
  loggers:
    netbox.authentication.*:
      handlers:
        - console
      level: DEBUG
  version: 1
postgresql:
  enabled: false
  # enabled: true
externalDatabase:
  host: postgresql.database.svc.cluster.local
  database: netbox
  username: segre
  existingSecretName: netbox-secret
  existingSecretPasswordKey: postgres-password
redis:
  enabled: false
  # enabled: true
#   global:
#     defaultStorageClass: nfs-csi
tasksRedis:
#   database: 1
  ssl: true
  insecureSkipTlsVerify: true
  host: redis-master.database.svc.cluster.local
  port: 6379
  # sentinels: 
    # - redis://redis-master.database.svc.cluster.local:6379
    # - redis-master.database.svc.cluster.local
  sentinelService: redis-master
  username: segre
  existingSecretName: redis-secret
  existingSecretPasswordKey: redis-tasks-password
cachingRedis:
  # database: 2
  ssl: true
  insecureSkipTlsVerify: true
  host: redis-master.database.svc.cluster.local
  port: 6379
  # sentinels: 
    # - redis://redis-master.database.svc.cluster.local:6379
    # - redis-master.database.svc.cluster.local
  sentinelService: redis-master
  username: segre
  existingSecretName: redis-secret
  existingSecretPasswordKey: redis-cache-password
externalRedis:
  existingSecretName: redis-secret
persistence: 
  enabled: true
  existingClaim: netbox-pvc
ingress:
  enabled: true
  ingressClassName: nginx
  hostname: netbox.marokiki.net
  annotations:
    meta.helm.sh/release-name: netbox
    meta.helm.sh/release-namespace: netbox
    nginx.ingress.kubernetes.io/proxy-body-size: 10000m
    nginx.ingress.kubernetes.io/ssl-passthrough: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-issuer
  tls: true
    # - secretName: cloudflare-lets-encrypt-netbox
    #   hosts:
    #     - netbox.marokiki.net
  hosts:
    - host: netbox.marokiki.net
      paths: 
      - path: /
        pathType: Prefix
        backend:
          service:
            name: netbox
            port:
              number: 80
housekeeping:
  enabled: true
worker:
  enabled: true
  replicaCount: 1

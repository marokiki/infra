expose:
  type: ingress
  tls:
    enabled: true
    secret:
      secretName: cloudflare-lets-encrypt-harbor
      hosts:
        - harbor.marokiki.net
ingress:
  className: nginx
  annotations:
    meta.helm.sh/release-name: harbor
    meta.helm.sh/release-namespace: harbor
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: harbor-basic-auth
    nginx.ingress.kubernetes.io/auth-secret-type: auth-file
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required '
    nginx.ingress.kubernetes.io/proxy-body-size: 10000m
    nginx.ingress.kubernetes.io/ssl-passthrough: "false"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    external-dns.alpha.kubernetes.io/hostname: harbor.marokiki.net
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-issuer
persistence:
  enabled: true
  # persistentVolumeClass:
  #   registry:
  #     existingClaim: harbor-registry
  #   jobservice:
  #     existingClaim: harbor-jobservice
  #   redis: 
  #     existingClaim: data-harbor-redis-0
  #   trivy:
  #     existingClaim: data-harbor-trivy-0
logLevel: debug
database:
  type: external
  external:
    host: postgresql.database.svc.cluster.local
    username: segre
    existingSecret: harbor-postgres-secret
redis:
  type: internal
  # maybe bitnami/redis has a bug for redis username
  # see https://github.com/bitnami/charts/issues/7709
  # type: external
  # external:
  #   addr: redis-master.database.svc.cluster.local:6379
  #   # username: segre
  #   existingSecret: harbor-redis-secret
